Abstract

This document explores the performance of two separate implementations of Sudoku Puzzle agent and the resulting evaluation of the implementations. Each implementation is a distinct search method to solve any Sudoku puzzle. They will be evaluated based on how fast each solves a given set of puzzles. It was our goal to explore these methods to ultimately see how well they worked.

Introduction

A Sudoku Puzzle like the one in figure #insert number here# is any n^2 by n^2 grid sub divided into n^2, n by n boxes. In the typical case n is equal to 3 which makes the Puzzle a 9 by 9 grid with 9 boxes, each box being it's own 3 by 3 grid. In any case, to solve the Puzzle, distinct numbers 1 through n^2 must be filled into every row and column of the grid so that no two numbers are in the same row, column, or box. Our implementations solve any Sudoku Puzzle with an n <= 7.

Implementations

Searchnxn Implementation

The Searchnxn Implementation searches for the solution by filling in one box at a time. To do this Searchnxn first selects one of the boxes to fill in. Once selected Searchnxn will generate all possible solutions for the given box. These these solutions are added to a stack. Then for every element on the stack Searchnxn selects the next box to fill in. This process is repeated until either all boxes are filled in, or the stack is empty. If all boxes are filled in, then the solution is printed to stdout. Otherwise, there is no solution and false is returned. The inspiration behind this method was taken from the common computer science problem of a three coloring. A three coloring is a problem in which when given a map with n regions to color an agent finds a way to color the entire map with only three colors so that no two regions have the same two colors. If we think of the Sudoku Puzzle as being a map where no two numbers can be in the same row, column, or box and each box is a region, then a so called three coloring of a Sudoku Puzzle would be to "color" each box so that there are no violations where a color would be one of the possible solutions to that box.